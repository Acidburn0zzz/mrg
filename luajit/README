If you've built and installed cairo and microraptor gui, and have luajit
installed and in the path, you should be able to directly run the lua files, which microraptor backend is used is independent of the lua bindings.

Most API of Micro-raptor gui is bound, functions taking callbacks as function
pointers in C are properly memory managed - otherwise luajit quickly runs out
of resources.

the files are:

cairo.lua and cairo_h.lua

dependencies providing the cairo API,

mrg.lua

the FFI binding to microraptor gui, providing a full coverage of the API.

host.lua

a window manager for mmm processes (one of microraptors built in backends is to be an mmm client).


browse.lua

a file manager that uses mmm clients for viewing/editing of soma file types.

edit.lua

a simple text editor

flipgame.lua

an implementation of the game known
as reversi or othello

paddlewar.lua

boring pong

lyd.lua

bindings for a realtime audiosynthesis engine

and

microraptor-lua-synth.lua

a livecoding / fragment sheader tweaking of an instrument.
