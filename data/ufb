UFB is a small framebuffer abstraction.

It provides an API for a client to access a resizable RGBA 32bit framebuffer,
receive mouse/keyboard events. (and planned - stereo audio output).

If the environment variable UFB_PATH is set, a file is created and memory
mapped in this directory. With the expectation that a compositor process will
notice the file; and communicate of shared mapped memory in the file.

If UFB_PATH is not set, ufb will try to create a framebuffer environment with
events using /dev/fb /dev/input etc. The implementation has only been tested
on linux thus far.

Todo: write standalone compositor wrapper for at least SDL; which allows
running an ufb app wherhever SDL works.

Todo: write a minimal compositor - without cairo dependency - to have a really
minimalist bootstrap.

-----
